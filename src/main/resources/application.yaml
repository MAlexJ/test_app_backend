server:
  port: ${PORT:8080}

  error:
    include-message: always
    whitelabel:
      enabled: true

logging:
  level:
    root: ${APP_SERVICE_ROOT_LOG_LEVEL:INFO}
    org.springframework: ${APP_SERVICE_SPRING_LOG_LEVEL:INFO}
    # MongoDb: query
    org.springframework.data.mongodb.core.MongoTemplate: ${APP_SERVICE_MONGO_TEMPLATE_LOG_LEVEL:DEBUG}
    # MongoDb: N+1 queries for referenced collections
    org.springframework.data.mongodb.core.convert.MongoDatabaseFactoryReferenceLoader: ${APP_SERVICE_MONGO_REF_LOADER_LOG_LEVEL:TRACE}

spring:
  application:
    name: ${APP_SERVICE_NAME:test-backend-app}

  config:
    import: optional:file:.env[.properties]

  threads:
    virtual:
      enabled: true

  jpa:
    # enable logging of SQL statements.
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 50

  data:
    mongodb:
      uri: ${APP_SERVICE_MONGODB_URI:uri}
      database: ${APP_SERVICE_MONGODB_DATABASE:test-backend-db}

webapp:
  telegram:
    secret:
      key: ${APP_SERVICE_TELEGRAM_WEB_APP_SECRET_KEY:secret_key}
    bot:
      token: ${APP_SERVICE_TELEGRAM_BOT_TOKEN:fake_token}

management:
  endpoint:
    health:
      show-details: always
      access: read_only
  endpoints:
    web:
      exposure:
        include:
          - health

springdoc:
  swagger-ui:
    path: /api/documentation

sentry:
  dsn: ${APP_SERVICE_SENTRY_DSN:}
  # Set traces-sample-rate to 1.0 to capture 100% of transactions for tracing.
  # We recommend adjusting this value in production.
  traces-sample-rate: ${APP_SERVICE_SENTRY_TRACE_SAMPLE_RATE:1.0}

cors:
  frontend:
    urls: ${APP_SERVICE_FRONTEND_URLS:"http://localhost:3000", "http://localhost:5000"}

jwt:
  app:
    enable_security: ${APP_SERVICE_ENABLE_SECURITY:true}
    secret: ${APP_SERVICE_JWT_SECRET_KEY:jwt_secret_key}